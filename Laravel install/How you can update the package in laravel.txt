How You can Update a package in Laravel?

In Laravel, a popular PHP web framework, you can manage package versions using Composer,
 which is a dependency management tool. Composer allows you to install,
 update, and remove packages easily, including Laravel packages. 
Here's how you can upgrade and downgrade a package in Laravel using Composer:
-----------------------------------------
1. Upgrade a Package:
composer update package-name

---------------------------------
2.2. Downgrade a Package:

Downgrading a package can be a bit trickier because Composer is
designed to install the latest compatible version of a package by default. 
However, if you want to downgrade a package, you can specify the desired version explicitly.

To downgrade a package, follow these steps:

1)Check Available Versions:
composer show package-name
--------------------------------------------------------------------------------------------------
In your Laravel project's composer.json file, locate the package you want to
downgrade in the require or require-dev section. Modify the version constraint to the desired version.
2)"require": {
    "my/package": "1.0.0"
}
--------------------------------------------------------------------------------------------------

Update the Composer Autoloader:

composer dump-autoload
-------------------------------------
Run Composer Update:
Run the composer update command to ensure that the changes take effect:

----->
composer update



